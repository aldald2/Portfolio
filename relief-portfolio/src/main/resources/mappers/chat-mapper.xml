<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
 "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="chatMapper">
 	<resultMap type="ChatHistory" id="chatHitoryResultSet">
 		<id property="chatHistoryId" column="CHAT_HISTORY_ID"/>
 		<result property="chatId" column="CHAT_ID"/>
 		<result property="accountId" column="ACCOUNT_ID"/>
 		<result property="accountId2" column="ACCOUNT_ID2"/>
 		<result property="content" column="CONTENT"/>
 		<result property="chatDate" column="CHAT_DATE"/>
 		<result property="status" column="STATUS"/>
 		<result property="status2" column="STATUS2"/>
 	</resultMap>
 	
 	<resultMap type="Chat" id="chatResultSet">
 		<id property="chatId" column="CHAT_ID"/>
 		<result property="accountId" column="ACCOUNT_ID"/>
 		<result property="accountId2" column="ACCOUNT_ID2"/>
 		<result property="chatStatus" column="CHAT_STATUS"/>
 		<result property="chatStatus2" column="CHAT_STATUS2"/>
 		<result property="blockStatus" column="BLOCK_STATUS"/>
 		<result property="blockStatus2" column="BLOCK_STATUS2"/>
 	</resultMap>
 	
 	<resultMap type="Block" id="blockResultSet">
 		<id property="blockId" column="BLOCK_ID"/>
 		<result property="accountId" column="ACCOUNT_ID"/>
 		<result property="accountId2" column="ACCOUNT_ID2"/>
 		<result property="chatId" column="CHAT_ID"/>
 		<result property="blockDate" column="BLOCK_DATE"/>
 	</resultMap>
 	
 	<select id="selectList" parameterType="string" resultMap="chatHitoryResultSet">
		SELECT * 
		  FROM (
				SELECT 
			  		  C.ACCOUNT_ID2, 
			  		  C.ACCOUNT_ID,
			  		  B.CONTENT, 
			  		  B.CHAT_DATE, 
			  		  B.STATUS,
			  		  B.STATUS2,
			  		  C.CHAT_ID,
                      D.NAME,
                      CHAT_HISTORY_ID,
                      C.CHAT_STATUS,
                      C.CHAT_STATUS2,
                      C.BLOCK_STATUS,
                      C.BLOCK_STATUS2
		 		 FROM (
			  		   SELECT 
			  	       ROW_NUMBER() OVER
			  	       (PARTITION BY CHAT_ID 
			  	       ORDER BY CHAT_DATE DESC) AS ROW1
          			   , A.*
				  FROM  
					  CHAT_HISTORY A
                 WHERE
                 	  STATUS = 'Y'
			  	) B
			   	, CHAT C
                , ACCOUNT D
		WHERE 
			  B.ROW1 = 1
		  AND B.CHAT_ID = C.CHAT_ID
          AND C.ACCOUNT_ID2 = D.ACCOUNT_ID
		  AND C.ACCOUNT_ID = #{accountId}
          AND C.CHAT_STATUS2 = 'Y'
        UNION ALL
         		 SELECT 
			  		   C.ACCOUNT_ID,
			  		   C.ACCOUNT_ID2, 
			  		   B.CONTENT, 
			  		   B.CHAT_DATE, 
			  		   B.STATUS,
			  		   B.STATUS2,
			  		   C.CHAT_ID,
                       D.NAME,
                       CHAT_HISTORY_ID,
                       C.CHAT_STATUS,
                       C.CHAT_STATUS2,
                       C.BLOCK_STATUS,
                       C.BLOCK_STATUS2
		 FROM (
			  SELECT 
			  	    ROW_NUMBER() OVER
			  	    	(PARTITION BY CHAT_ID 
			  	    	 ORDER BY CHAT_DATE DESC) AS ROW1
          			   , A.*
				FROM  
					CHAT_HISTORY A
               WHERE
                     STATUS2 = 'Y'
			  ) B
			  , CHAT C
              , ACCOUNT D
		WHERE 
			  B.ROW1 = 1
		 	  AND B.CHAT_ID = C.CHAT_ID
              AND C.ACCOUNT_ID = D.ACCOUNT_ID
		 	  AND C.ACCOUNT_ID2 = #{accountId}
              AND C.CHAT_STATUS = 'Y'
         	  )
       ORDER BY 
       		   CHAT_DATE DESC
 	</select>
 	<select id="selectChat" parameterType="Chat" resultMap="chatHitoryResultSet">
 		SELECT
			  CH.CHAT_HISTORY_ID
			, CH.CHAT_ID
			, CH.ACCOUNT_ID
			, CH.CONTENT
			, TO_CHAR(CH.CHAT_DATE, 'YYYYMMDDHHMISS')
			, CH.STATUS
			, CH.STATUS2
			, C.ACCOUNT_ID2
 		  FROM
 		  	   CHAT_HISTORY CH
               JOIN CHAT C ON(CH.CHAT_ID = C.CHAT_ID)
 		 WHERE
 		 	   CH.CHAT_ID = #{chatId}
 		   AND (C.ACCOUNT_ID = #{accountId}
 		   OR C.ACCOUNT_ID2 = #{accountId2})
 	</select>
 	<insert id="insertChat" parameterType="ChatHistory">
 		INSERT
	    INTO CHAT_HISTORY
		(
		  CHAT_HISTORY_ID
		, CHAT_ID
		, ACCOUNT_ID
		, CONTENT
		, CHAT_DATE
		, STATUS
		, STATUS2
		)
		VALUES
		(
		SEQ_CHAT_HISTORY_ID.NEXTVAL
		, #{chatId}
		, #{accountId}
		, #{content}
		, SYSDATE
		, DEFAULT
		, DEFAULT
		)
 	</insert>
 	<insert id="insertChat2" parameterType="ChatHistory">
 		INSERT
	    INTO CHAT_HISTORY
		(
		  CHAT_HISTORY_ID
		, CHAT_ID
		, ACCOUNT_ID
		, CONTENT
		, CHAT_DATE
		, STATUS
		, STATUS2
		)
		VALUES
		(
		SEQ_CHAT_HISTORY_ID.NEXTVAL
		, #{chatId}
		, #{accountId}
		, #{content}
		, SYSDATE
		, 'N'
		, DEFAULT
		)
 	</insert>
 	<insert id="insertChat3" parameterType="ChatHistory">
 		INSERT
	    INTO CHAT_HISTORY
		(
		  CHAT_HISTORY_ID
		, CHAT_ID
		, ACCOUNT_ID
		, CONTENT
		, CHAT_DATE
		, STATUS
		, STATUS2
		)
		VALUES
		(
		SEQ_CHAT_HISTORY_ID.NEXTVAL
		, #{chatId}
		, #{accountId}
		, #{content}
		, SYSDATE
		, DEFAULT
		, 'N'
		)
 	</insert>
 	<insert id="createChat" parameterType="Chat">
 		INSERT
 		INTO CHAT
 		(
 			CHAT_ID
 		  , ACCOUNT_ID
 		  , ACCOUNT_ID2
 		  , CHAT_STATUS
 		  , CHAT_STATUS2
 		  , BLOCK_STATUS
 		  , BLOCK_STATUS2
 		)
 		VALUES
 		(
 			SEQ_CHAT_ID.NEXTVAL
 		  , #{accountId}
 		  , #{accountId2}
 		  , DEFAULT
 		  , DEFAULT
 		  , DEFAULT
 		  , DEFAULT
 		)
 	</insert>
 	<select id="checkChat" parameterType="Chat" resultMap="chatResultSet">
 		SELECT
 			  CHAT_ID
			, ACCOUNT_ID
			, ACCOUNT_ID2
			, CHAT_STATUS
			, CHAT_STATUS2
			, BLOCK_STATUS
 		  	, BLOCK_STATUS2
	     FROM
	     	  CHAT
	    WHERE
	    	  ACCOUNT_ID = #{accountId}
	      AND
	      	  ACCOUNT_ID2 = #{accountId2}
 	</select>
 	<select id="checkChat2" parameterType="Chat" resultMap="chatResultSet">
 		SELECT
 			  CHAT_ID
			, ACCOUNT_ID
			, ACCOUNT_ID2
			, CHAT_STATUS
			, CHAT_STATUS2
			, BLOCK_STATUS
 		  	, BLOCK_STATUS2
	     FROM
	     	  CHAT
	    WHERE
	    	  ACCOUNT_ID = #{accountId2}
	      AND
	      	  ACCOUNT_ID2 = #{accountId}
 	</select>
 	<select id="blockCheck" parameterType="_int" resultMap="chatResultSet">
 		SELECT
 			  CHAT_ID
			, ACCOUNT_ID
			, ACCOUNT_ID2
			, CHAT_STATUS
			, CHAT_STATUS2
			, BLOCK_STATUS
 		  	, BLOCK_STATUS2
		FROM
			  CHAT
	   WHERE
	   		 CHAT_ID = #{chatId}
 	</select>
 	<update id="updateBlock" parameterType="_int">
 		UPDATE
 			   CHAT
 		   SET
 			  BLOCK_STATUS2 = 'Y'
 		WHERE
 			  CHAT_ID = #{chatId}
 	</update>
 	<update id="updateBlock2" parameterType="_int">
 		UPDATE
 			   CHAT
 		   SET
 			  BLOCK_STATUS = 'Y'
 		WHERE
 			  CHAT_ID = #{chatId}
 	</update>
  	<update id="updateBlock3" parameterType="_int">
 		UPDATE
 			   CHAT
 		   SET
 			  BLOCK_STATUS2 = 'N'
 		WHERE
 			  CHAT_ID = #{chatId}
 	</update>
  	<update id="updateBlock4" parameterType="_int">
 		UPDATE
 			   CHAT
 		   SET
 			  BLOCK_STATUS = 'N'
 		WHERE
 			  CHAT_ID = #{chatId}
 	</update>
 	<insert id="insertBlock" parameterType="Chat">
 		INSERT
 		INTO BLOCK
 		(
 		  BLOCK_ID
		, ACCOUNT_ID
		, ACCOUNT_ID2
		, CHAT_ID
		, BLOCK_DATE
 		)
 		VALUES
 		(
 		  SEQ_BLOCK_ID.NEXTVAL
 		, #{accountId}
 		, #{accountId2}
 		, #{chatId}
 		, SYSDATE
 		)
 	</insert>
 	<insert id="insertBlock2" parameterType="Chat">
 		INSERT
 		INTO BLOCK
 		(
 		  BLOCK_ID
		, ACCOUNT_ID
		, ACCOUNT_ID2
		, CHAT_ID
		, BLOCK_DATE
 		)
 		VALUES
 		(
 		  SEQ_BLOCK_ID.NEXTVAL
 		, #{accountId}
 		, #{accountId2}
 		, #{chatId}
 		, SYSDATE
 		)
 	</insert>
 	<select id="blockUser" parameterType="Chat" resultMap="blockResultSet">
 		SELECT
 			  BLOCK_ID
 			, ACCOUNT_ID
 			, ACCOUNT_ID2
 			, CHAT_ID
 			, BLOCK_DATE
 		FROM
 			 BLOCK
 	   WHERE
 	   		 ACCOUNT_ID = #{accountId}
 	   	  AND
 	   	  	 CHAT_ID = #{chatId}
 	</select>
 	<select id="blockUser2" parameterType="string" resultMap="blockResultSet">
 		SELECT
 			  BLOCK_ID
 			, ACCOUNT_ID
 			, ACCOUNT_ID2
 			, CHAT_ID
 			, BLOCK_DATE
 		FROM
 			 BLOCK
 	   WHERE
 	   		 ACCOUNT_ID = #{accountId}
 	</select>
 	<delete id="deleteBlock" parameterType="_int">
 		DELETE
 		  FROM BLOCK
 		 WHERE CHAT_ID = #{chatId}
 	</delete>
 	 	<delete id="deleteBlock2" parameterType="_int">
 		DELETE
 		  FROM BLOCK
 		 WHERE CHAT_ID = #{chatId}
 	</delete>
 	<update id="exitChat" parameterType="Chat">
 		UPDATE
              CHAT
		SET
            CHAT_STATUS2 = 'N'
		WHERE ACCOUNT_ID = #{accountId}
		AND CHAT_ID = #{chatId}
 	</update>
 	<update id="exitChat2" parameterType="ChatHistory">
 		UPDATE
              CHAT_HISTORY
		SET
            STATUS2 = 'N'
		WHERE ACCOUNT_ID = #{accountId}
		AND CHAT_ID = #{chatId}
 	</update>
 	<update id="exitChat3" parameterType="Chat">
 		UPDATE
              CHAT
		SET
            CHAT_STATUS = 'N'
		WHERE ACCOUNT_ID2 = #{accountId2}
		AND CHAT_ID = #{chatId}
 	</update>
 	<update id="exitChat4" parameterType="ChatHistory">
 		UPDATE
              CHAT_HISTORY
		SET
            STATUS = 'N'
		WHERE ACCOUNT_ID = #{accountId2}
		AND CHAT_ID = #{chatId}
 	</update>
 	<select id="selectAccount" parameterType="Chat" resultMap="chatResultSet">
 		SELECT
			  CHAT_ID,
			  ACCOUNT_ID,
			  ACCOUNT_ID2,
			  CHAT_STATUS,
			  CHAT_STATUS2
		FROM 
			  CHAT C
		WHERE
			(
			ACCOUNT_ID = #{accountId}
			OR 
			ACCOUNT_ID2 = #{accountId}
			)
		  AND 
		  	  CHAT_ID = #{chatId}
 	</select>
 	<update id="updateChatStatus" parameterType="Chat">
 	   UPDATE
              CHAT
		SET
            CHAT_STATUS = 'Y' ,
            CHAT_STATUS2 = 'Y'
		WHERE CHAT_ID = #{chatId}
 	</update>
 </mapper>