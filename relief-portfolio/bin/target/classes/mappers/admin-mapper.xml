<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
 "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 <mapper namespace="adminMapper">
 	<resultMap type="Account" id="AccountResultSet">
 		<id property="aid" column="ACCOUNT_ID"/>
 		<result property="pwd" column="PWD"/>
 		<result property="name" column="NAME"/>
 		<result property="phone" column="PHONE"/>
 		<result property="email" column="EMAIL"/>
 		<result property="address" column="ADDRESS"/>
 		<result property="status" column="STATUS"/>
 		<result property="mstatus" column="M_STATUS"/>
 		<result property="sanctions" column="SANCTIONS"/>
 		<result property="authKey" column="AUTHKEY"/>
 		<result property="createDate" column="CREATE_DATE"/>
 	</resultMap>
 	<resultMap type="Account" id="AccountResultSet2">
 		<id property="aid" column="ACCOUNT_ID"/>
 		<result property="pwd" column="PWD"/>
 		<result property="name" column="NAME"/>
 		<result property="phone" column="PHONE"/>
 		<result property="email" column="EMAIL"/>
 		<result property="address" column="ADDRESS"/>
 		<result property="status" column="STATUS"/>
 		<result property="mstatus" column="M_STATUS"/>
 		<result property="sanctions" column="SANCTIONS"/>
 		<result property="authKey" column="AUTHKEY"/>
 		<result property="createDate" column="CREATE_DATE"/>
 		<result property="rid" column="REPORT_ID"/>
 		<result property="reportDate" column="REPORT_DATE"/>
 	</resultMap>
 	<resultMap type="Notice" id="NoticeResultSet">
 		<id property="nid" column="NOTICE_ID"/>
 		<result property="aid" column="ACCOUNT_ID"/>
 		<result property="title" column="TITLE"/>
 		<result property="ncontent" column="NCONTENT"/>
 		<result property="createDate" column="CREATE_DATE"/>
 		<result property="modifyDate" column="MODIFY_DATE"/>
 		<result property="ncount" column="NCOUNT"/>
 		<result property="status" column="STATUS"/>
 		<result property="fileName" column="FILENAME"/>
 		<result property="renameFileName" column="RENAME_FILENAME"/>
 		<result property="nstatus" column="N_STATUS"/>
 		<result property="astatus" column="A_STATUS"/>
 	</resultMap>
 	<resultMap type="Category" id="CategoryResultSet">
 		<id property="cid" column="CATEGORY_ID"/>
 		<result property="cname" column="C_NAME"/>
 		<result property="cid2" column="CATEGORY_ID2"/>
 		<result property="cgroup" column="C_GROUP"/>
 		<result property="cstatus" column="C_STATUS"/>
 	</resultMap>
 	<resultMap type="Report" id="ReportResultSet">
 		<id property="rpid" column="REPORT_ID"/>
 		<result property="chid" column="CHAT_ID"/>
 		<result property="bid" column="BOARD_ID"/>
 		<result property="rid" column="REPLY_ID"/>
 		<result property="reportReason" column="REPORT_REASON"/>
 		<result property="aid" column="ACCOUNT_ID"/>
 		<result property="aid2" column="ACCOUNT_ID2"/>
 		<result property="reportDate" column="REPORT_DATE"/>
 	</resultMap>
 	<resultMap type="Qna" id="QnaResultSet">
 		<id property="qid" column="QNA_ID"/>
 		<result property="aid" column="ACCOUNT_ID"/>
 		<result property="qtitle" column="Q_TITLE"/>
 		<result property="qcontent" column="Q_CONTENT"/>
 		<result property="atitle" column="A_TITLE"/>
 		<result property="acontent" column="A_CONTENT"/>
 		<result property="status" column="STATUS"/>
 		<result property="astatus" column="A_STATUS"/>
 		<result property="star" column="STAR"/>
 		<result property="createDate" column="CREATE_DATE"/>
 	</resultMap>
 	<resultMap type="Faq" id="FaqResultSet">
 		<id property="fid" column="FAQ_ID"/>
 		<result property="title" column="TITLE"/>
 		<result property="content" column="CONTENT"/>
 		<result property="createDate" column="CREATE_DATE"/>
 		<result property="modifyDate" column="MODIFY_DATE"/>
 		<result property="status" column="STATUS"/>
 		<result property="fileName" column="FILENAME"/>
 		<result property="renameFileName" column="RENAME_FILENAME"/>
 		<result property="aid" column="ACCOUNT_ID"/>
 	</resultMap>
 	<resultMap type="Reply" id="ReplyResultSet">
 		<id property="reply_id" column="REPLY_ID"/>
 		<result property="bid" column="BOARD_ID"/>
 		<result property="aid" column="ACCOUNT_ID"/>
 		<result property="title" column="TITLE"/>
 		<result property="create_date" column="CREATE_DATE"/>
 		<result property="modify_date" column="MODIFY_DATE"/>
 		<result property="status" column="STATUS"/>
 		<result property="reply_id2" column="REPLY_ID2"/>
 	</resultMap>
 	<select id="chart" resultType="Chart">
 		SELECT *
		  FROM (SELECT C_NAME, COUNT(*) COUNT
				  FROM BOARD
				  JOIN CATEGORY USING(CATEGORY_ID) 
	  			  GROUP BY C_NAME
				  ORDER BY COUNT(*)DESC)
		  WHERE ROWNUM <![CDATA[<=]]> 5
 	</select>
	<select id="aCount" resultType="_int">
		SELECT 
				COUNT(*)
		  FROM
		  		ACCOUNT
	</select>
	<select id="todayAccount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		ACCOUNT
		 WHERE
		 		CREATE_DATE = TO_DATE(TO_CHAR(SYSDATE))
	</select>
	<select id="reportCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		REPORT
		 WHERE
		 		REPORT_DATE = TO_DATE(TO_CHAR(SYSDATE))
	</select>
	<select id="selectnListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		NOTICE
		 WHERE
		 		STATUS = 'Y'
	</select>
	<select id="selectnList" resultMap="NoticeResultSet">
		SELECT
				NOTICE_ID
		  	  , ACCOUNT_ID
		  	  , TITLE
		  	  , NCONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , NCOUNT
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , N_STATUS
		  	  , A_STATUS
		  FROM
		  		NOTICE
		 WHERE
		 		STATUS = 'Y'
      ORDER BY
      			NOTICE_ID DESC
	</select>
	<select id="searchNListCount" parameterType="Search" resultType="_int">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		NOTICE
		 <where>
		 		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND NCONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR NCONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="searchNList" parameterType="Search" resultMap="NoticeResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				NOTICE_ID
		  	  , ACCOUNT_ID
		  	  , TITLE
		  	  , NCONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , NCOUNT
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , N_STATUS
		  	  , A_STATUS
		  FROM
		  		NOTICE
		 <where>
		 		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND NCONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR NCONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
		 ORDER BY  NOTICE_ID DESC
	</select>
	<insert id="insertNotice" parameterType="Notice">
		INSERT
		INTO NOTICE
		(
			NOTICE_ID
		  , ACCOUNT_ID
		  , TITLE
		  , NCONTENT
		  , CREATE_DATE
		  , MODIFY_DATE
		  , NCOUNT
		  , STATUS
		  , FILENAME
		  , RENAME_FILENAME
		  , N_STATUS
		  , A_STATUS
		)
		VALUES
		(
			SEQ_NID.NEXTVAL
		  , #{aid}
		  , #{title}
		  , #{ncontent}
		  , SYSDATE
		  , SYSDATE
		  , 0
		  , 'Y'
		  , #{fileName}
		  , #{renameFileName}
		  , #{nstatus}
		  , 'N'
		)
	</insert>
	<select id="selectNotice" parameterType="_int" resultMap="NoticeResultSet">
		SELECT
				NOTICE_ID
		  	  , ACCOUNT_ID
		  	  , TITLE
		  	  , NCONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , NCOUNT
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , N_STATUS
		  	  , A_STATUS
		  FROM
		  		NOTICE
		 WHERE
		 		NOTICE_ID = #{nid}
	</select>
	<update id="updateNotice" parameterType="Notice">
		UPDATE
				NOTICE
		   SET
		   		TITLE = #{title}
		   	  , NCONTENT = #{ncontent}
		   	  , MODIFY_DATE = SYSDATE
		   	  , FILENAME = #{fileName}
		   	  , RENAME_FILENAME = #{renameFileName}
		   	  , N_STATUS = #{nstatus}
		WHERE
				NOTICE_ID = #{nid}
	</update>
	<update id="deleteNotice" parameterType="_int">
		UPDATE
				NOTICE
		   SET
		   		STATUS = 'N'
		WHERE
				NOTICE_ID = #{nid}
	</update>
	<select id="selectcListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		CATEGORY
		 WHERE
		 		C_STATUS = 'Y'
	</select>
	<select id="selectcList" resultMap="CategoryResultSet">
		SELECT
				CATEGORY_ID
			  , C_NAME
			  , CATEGORY_ID2
			  , C_GROUP
			  , C_STATUS
		  FROM
		  		CATEGORY
		 WHERE
		 		C_STATUS = 'Y'
		  ORDER BY CATEGORY_ID DESC
	</select>
	<select id="selectcnameList" parameterType="_int" resultMap="CategoryResultSet">
		SELECT
				CATEGORY_ID
			  , C_NAME
			  , CATEGORY_ID2
			  , C_GROUP
			  , C_STATUS
		  FROM
		  		CATEGORY
		 WHERE
		 		C_GROUP = #{cgroup}
		   AND  C_STATUS = 'Y'
	</select>
	<insert id="insertCategory" parameterType="Category">
		INSERT
		INTO CATEGORY
		VALUES
		(
			SEQ_CID.NEXTVAL
		  , #{cname}
		  , #{cid2}
		  , #{cgroup}
		  , 'Y'
		)
	</insert>
	<select id="searchCListCount" parameterType="Search" resultType="_int">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		CATEGORY
		  <where>
		  		C_STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'cid'">
		 			AND CATEGORY_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'cname'">
		 			AND C_NAME LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (CATEGORY_ID LIKE #{sv}
					 	 OR C_NAME LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="searchCList" parameterType="Search" resultMap="CategoryResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				CATEGORY_ID
			  , C_NAME
			  , CATEGORY_ID2
			  , C_GROUP
			  , C_STATUS
		  FROM
		  		CATEGORY
		  	<where>
		  		C_STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'cid'">
		 			AND CATEGORY_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'cname'">
		 			AND C_NAME LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (CATEGORY_ID LIKE #{sv}
					 	 OR C_NAME LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
		  ORDER BY CATEGORY_ID DESC
	</select>
	<select id="selectCategory" parameterType="_int" resultMap="CategoryResultSet">
		SELECT
				CATEGORY_ID
			  , C_NAME
			  , CATEGORY_ID2
			  , C_GROUP
			  , C_STATUS
		  FROM
		  		CATEGORY
		 WHERE
		 		C_STATUS = 'Y'
		   AND  CATEGORY_ID = #{cid}
	</select>
	<select id="checkCategory" parameterType="_int" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		CATEGORY
		 WHERE
		 		CATEGORY_ID = #{cid}
		   AND  C_STATUS = 'Y'
	</select>
	<update id="updateCategory" parameterType="Category">
		UPDATE
				CATEGORY
		   SET
		   		C_NAME = #{cname}
		   	  , CATEGORY_ID2 = #{cid2}
		   	  , C_GROUP = #{cgroup}
		 WHERE
		 		CATEGORY_ID = #{cid}
	</update>
	<update id="deleteCategory" parameterType="_int">
		UPDATE
				CATEGORY
		   SET
		   		C_STATUS = 'N'
		 WHERE
		 		CATEGORY_ID = #{cid}
	</update>
	<select id="selectrListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		REPORT
	</select>
	<select id="selectrList" resultMap="ReportResultSet">
		SELECT
				REPORT_ID
			  , CHAT_ID
			  , BOARD_ID
			  , REPLY_ID
			  , REPORT_REASON
			  , ACCOUNT_ID
			  , ACCOUNT_ID2
			  , REPORT_DATE
		 FROM
		 	  REPORT
    LEFT JOIN SANCTIONS USING (REPORT_ID)
        WHERE SANCTIONS_ID IS NULL
     ORDER BY REPORT_ID DESC  
	</select>
	<select id="searchRListCount" parameterType="Search" resultType="_int">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		REPORT
	 LEFT JOIN SANCTIONS USING (REPORT_ID)
		  <where>
		  		SANCTIONS_ID IS NULL
		 		<choose>
		 			<when test="searchCondition == 'reportReason'">
		 			AND REPORT_REASON LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid'">
		 			AND ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid2'">
		 			AND ACCOUNT_ID2 LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (REPORT_REASON LIKE #{sv}
					 	 OR ACCOUNT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="searchRList" parameterType="Search" resultMap="ReportResultSet">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				REPORT_ID
			  , CHAT_ID
			  , BOARD_ID
			  , REPLY_ID
			  , REPORT_REASON
			  , ACCOUNT_ID
			  , ACCOUNT_ID2
			  , REPORT_DATE
		  FROM
		  		REPORT
	 LEFT JOIN SANCTIONS USING (REPORT_ID)
		  <where>
		  		SANCTIONS_ID IS NULL
		 		<choose>
		 			<when test="searchCondition == 'reportReason'">
		 			AND REPORT_REASON LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid'">
		 			AND ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid2'">
		 			AND ACCOUNT_ID2 LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (REPORT_REASON LIKE #{sv}
					 	 OR ACCOUNT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
		 ORDER BY REPORT_ID DESC
	</select>
	<select id="selectReport" parameterType="_int" resultMap="ReportResultSet">
		SELECT
				REPORT_ID
			  , CHAT_ID
			  , BOARD_ID
			  , REPLY_ID
			  , REPORT_REASON
			  , ACCOUNT_ID
			  , ACCOUNT_ID2
			  , REPORT_DATE
		  FROM
		  		REPORT
		 WHERE
		 		REPORT_ID = #{rpid}
	</select>
	<insert id="insertSanctions" parameterType="com.kh.relief.admin.model.vo.Sanctions">
		INSERT
		  INTO SANCTIONS
		VALUES
		(
			SEQ_SID.NEXTVAL
		  , #{rpid}
		  , SYSDATE
		  , #{sanctionsReason}
		)
	</insert>
	<update id="banUser" parameterType="Account">
		UPDATE
				ACCOUNT
		   SET
		   		SANCTIONS = #{sanctions}
		 WHERE
		 		ACCOUNT_ID = #{aid}
	</update>
	<select id="selectBlockListCount" parameterType="date" resultType="_int">
		SELECT 
				COUNT(*)
            FROM ACCOUNT A
             JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
             WHERE A.SANCTIONS <![CDATA[>=]]> #{today} AND (A.ACCOUNT_ID, R.REPORT_ID) IN (SELECT A.ACCOUNT_ID, MAX(REPORT_ID)
                                                                            FROM ACCOUNT A
                                                                            JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
                                                                            GROUP BY A.ACCOUNT_ID )
                                                                            ORDER BY SANCTIONS, REPORT_DATE DESC
	</select>
	<select id="blockUser" parameterType="date" resultMap="AccountResultSet2">
		SELECT A.ACCOUNT_ID
             , A.PWD
             , A.NAME
             , A.PHONE
             , A.EMAIL
             , A.ADDRESS
             , A.STATUS
             , A.M_STATUS
             , A.SANCTIONS
             , A.AUTHKEY
             , A.CREATE_DATE
             , R.REPORT_ID
             , R.REPORT_DATE
            FROM ACCOUNT A
             JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
             WHERE A.SANCTIONS <![CDATA[>=]]> #{today} AND (A.ACCOUNT_ID, R.REPORT_ID) IN (SELECT A.ACCOUNT_ID, MAX(REPORT_ID)
                                                                            FROM ACCOUNT A
                                                                            JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
                                                                            GROUP BY A.ACCOUNT_ID )
                                                                            ORDER BY SANCTIONS, REPORT_DATE DESC
	</select>
	<select id="searchBListCount" parameterType="Search" resultType="_int">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT 
				COUNT(*)
            FROM ACCOUNT A
             JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
            <where>
            	A.SANCTIONS <![CDATA[>=]]> TO_DATE(TO_CHAR(SYSDATE)) AND (A.ACCOUNT_ID, R.REPORT_ID) IN (SELECT A.ACCOUNT_ID, MAX(REPORT_ID)
                                                                            FROM ACCOUNT A
                                                                            JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
                                                                            GROUP BY A.ACCOUNT_ID )
		 		<choose>
		 			<when test="searchCondition == 'aid'">
		 			AND A.ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'rid'">
		 			AND R.REPORT_ID LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (A.ACCOUNT_ID LIKE #{sv}
					 	 OR R.REPORT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
           ORDER BY SANCTIONS, REPORT_DATE DESC
	</select>
	<select id="searchBList" parameterType="Search" resultMap="AccountResultSet2">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT 
				A.ACCOUNT_ID
              , A.PWD
              , A.NAME
              , A.PHONE
              , A.EMAIL
              , A.ADDRESS
              , A.STATUS
              , A.M_STATUS
              , A.SANCTIONS
              , A.AUTHKEY
              , A.CREATE_DATE
              , R.REPORT_ID
              , R.REPORT_DATE
            FROM ACCOUNT A
             JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
            <where>
            	A.SANCTIONS <![CDATA[>=]]> TO_DATE(TO_CHAR(SYSDATE)) AND (A.ACCOUNT_ID, R.REPORT_ID) IN (SELECT A.ACCOUNT_ID, MAX(REPORT_ID)
                                                                            FROM ACCOUNT A
                                                                            JOIN REPORT R ON(A.ACCOUNT_ID = R.ACCOUNT_ID2)
                                                                            GROUP BY A.ACCOUNT_ID )
		 		<choose>
		 			<when test="searchCondition == 'aid'">
		 			AND A.ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'rid'">
		 			AND R.REPORT_ID LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (A.ACCOUNT_ID LIKE #{sv}
					 	 OR R.REPORT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
           ORDER BY SANCTIONS, REPORT_DATE DESC
	</select>
	<update id="unbanUser" parameterType="list">
		UPDATE
				ACCOUNT
		   SET
		   		SANCTIONS = NULL
		 WHERE
		 		STATUS = 'Y'
		 		AND (ACCOUNT_ID =
		 		<foreach item="item" collection="list"
   		   		separator="OR ACCOUNT_ID =" close=")">#{item}</foreach>
	</update>
	<select id="selectQnaListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		QNA
	</select>
	<select id="selectqList" resultMap="QnaResultSet">
		SELECT
				QNA_ID
			  , ACCOUNT_ID
			  , Q_TITLE
			  , Q_CONTENT
			  , A_TITLE
			  , A_CONTENT
			  , STATUS
			  , A_STATUS
			  , STAR
			  , CREATE_DATE
		  FROM
		  		QNA
	  ORDER BY
	  			QNA_ID DESC
	</select>
	<select id="selectQna" parameterType="_int" resultMap="QnaResultSet">
		SELECT
				QNA_ID
			  , ACCOUNT_ID
			  , Q_TITLE
			  , Q_CONTENT
			  , A_TITLE
			  , A_CONTENT
			  , STATUS
			  , A_STATUS
			  , STAR
			  , CREATE_DATE
		  FROM
		  		QNA
	     WHERE
	     		QNA_ID = #{qid}	
	</select>
	<update id="updateQna" parameterType="Qna">
		UPDATE
				QNA
		   SET
		   		A_TITLE = #{atitle}
		   	  , A_CONTENT = #{acontent}
		   	  , A_STATUS = 'Y'
		 WHERE
		 		QNA_ID = #{qid}
	</update>
	<select id="searchQListCount" parameterType="Search" resultType="_int">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		QNA
		 <where>
		  		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'qtitle'">
		 			AND Q_TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'qcontent'">
		 			AND Q_CONTENT LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid'">
		 			AND ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (Q_TITLE LIKE #{sv}
					 	 OR Q_CONTENT LIKE #{sv}
					 	 OR ACCOUNT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="searchQList" parameterType="Search" resultMap="QnaResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				QNA_ID
			  , ACCOUNT_ID
			  , Q_TITLE
			  , Q_CONTENT
			  , A_TITLE
			  , A_CONTENT
			  , STATUS
			  , A_STATUS
			  , STAR
			  , CREATE_DATE
		  FROM
		  		QNA
		  <where>
		  		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'qtitle'">
		 			AND Q_TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'qcontent'">
		 			AND Q_CONTENT LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'aid'">
		 			AND ACCOUNT_ID LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (Q_TITLE LIKE #{sv}
					 	 OR Q_CONTENT LIKE #{sv}
					 	 OR ACCOUNT_ID LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
		 ORDER BY
	  			QNA_ID DESC
	</select>
	<select id="selectfListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		FAQ
		 WHERE
		 		STATUS = 'Y'
	</select>
	<select id="selectFList" resultMap="FaqResultSet">
		SELECT
				FAQ_ID
			  , TITLE
			  , CONTENT
			  , CREATE_DATE
			  , MODIFY_DATE
			  , STATUS
			  , FILENAME
			  , RENAME_FILENAME
			  , ACCOUNT_ID
		  FROM
		  		FAQ
		 WHERE
		 		STATUS = 'Y'
	  ORDER BY
	  			FAQ_ID DESC
	</select>
	<insert id="insertFaq" parameterType="Faq">
		INSERT
		  INTO FAQ
		  (
		  		FAQ_ID
		  	  , TITLE
		  	  , CONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , ACCOUNT_ID 
		  )
		VALUES
		(
			SEQ_FID.NEXTVAL
		  , #{title}
		  , #{content}
		  , SYSDATE
		  , SYSDATE
		  , 'Y'
		  , #{fileName}
		  , #{renameFileName}
		  , #{aid}
		)
	</insert>
	<select id="searchFListCount" parameterType="Search" resultType="_int">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		FAQ
		 <where>
		  		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND CONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR CONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="searchFList" parameterType="Search" resultMap="FaqResultSet">
		<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				FAQ_ID
			  , TITLE
			  , CONTENT
			  , CREATE_DATE
			  , MODIFY_DATE
			  , STATUS
			  , FILENAME
			  , RENAME_FILENAME
			  , ACCOUNT_ID
		  FROM
		  		FAQ
		 <where>
		  		STATUS = 'Y'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND CONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR CONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
		  ORDER BY
	  			FAQ_ID DESC
	</select>
	<select id="selectFaq" parameterType="_int" resultMap="FaqResultSet">
		SELECT
				FAQ_ID
			  , TITLE
			  , CONTENT
			  , CREATE_DATE
			  , MODIFY_DATE
			  , STATUS
			  , FILENAME
			  , RENAME_FILENAME
			  , ACCOUNT_ID
		  FROM
		  		FAQ
		 WHERE
		 		FAQ_ID = #{fid}
	</select>
	<update id="deleteFaq" parameterType="_int">
		UPDATE
				FAQ
		   SET
		   		STATUS ='N'
		 WHERE
		 		FAQ_ID = #{fid}
	</update>
	<update id="updateFaq" parameterType="Faq">
		UPDATE
				FAQ
		   SET
		   		TITLE = #{title}
		   	  , CONTENT = #{content}
		   	  , MODIFY_DATE = SYSDATE
		   	  , FILENAME = #{fileName}
		   	  , RENAME_FILENAME = #{renameFileName}
		 WHERE
		 		FAQ_ID = #{fid}
	</update>
	<select id="selectAdListCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		NOTICE
		 WHERE
		 		STATUS = 'Y'
		 	AND N_STATUS = '2'
	</select>
	<select id="selectAdList" resultMap="NoticeResultSet">
		SELECT
				NOTICE_ID
		  	  , ACCOUNT_ID
		  	  , TITLE
		  	  , NCONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , NCOUNT
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , N_STATUS
		  	  , A_STATUS
		  FROM
		  		NOTICE
		 WHERE
		 		STATUS = 'Y'
		 	AND N_STATUS = '2'
	</select>
	<update id="adUpdate1" parameterType="list">
		UPDATE
				NOTICE
		   SET
		   		A_STATUS = 'Y'
		 WHERE
		 		STATUS = 'Y'
		 		AND (NOTICE_ID =
		 		<foreach item="item" collection="list"
   		   		separator="OR NOTICE_ID =" close=")">#{item}</foreach>
	</update>
	<update id="adUpdate2" parameterType="list">
		UPDATE
				NOTICE
		   SET
		   		A_STATUS = 'N'
		 WHERE
		 		STATUS = 'Y'
		 		AND (NOTICE_ID =
		 		<foreach item="item" collection="list"
   		   		separator="OR NOTICE_ID =" close=")">#{item}</foreach>
	</update>
	<select id="searchadListCount" parameterType="Search" resultType="_int">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				COUNT(*)
		  FROM
		  		NOTICE
		 <where>
		 		STATUS = 'Y'
		 	AND N_STATUS = '2'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND NCONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR NCONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>				
	</select>
	<select id="searchadList" parameterType="Search" resultMap="NoticeResultSet">
	<bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
		SELECT
				NOTICE_ID
		  	  , ACCOUNT_ID
		  	  , TITLE
		  	  , NCONTENT
		  	  , CREATE_DATE
		  	  , MODIFY_DATE
		  	  , NCOUNT
		  	  , STATUS
		  	  , FILENAME
		  	  , RENAME_FILENAME
		  	  , N_STATUS
		  	  , A_STATUS
		  FROM
		  		NOTICE
		 <where>
		 		STATUS = 'Y'
		 	AND N_STATUS = '2'
		 		<choose>
		 			<when test="searchCondition == 'title'">
		 			AND TITLE LIKE #{sv}
		 			</when>
		 			<when test="searchCondition == 'content'">
		 			AND NCONTENT LIKE #{sv}
		 			</when>
		 			<otherwise>
		 			AND (TITLE LIKE #{sv}
					 	 OR NCONTENT LIKE #{sv})
		 			</otherwise>
		 		</choose>
		 </where>
	</select>
	<select id="commentDetail" parameterType="_int" resultMap="ReplyResultSet">
		SELECT
				REPLY_ID
			  , BOARD_ID
			  , ACCOUNT_ID
			  , TITLE
			  , CREATE_DATE
			  , MODIFY_DATE
			  , STATUS
			  , REPLY_ID2
		  FROM
		  		REPLY
		 WHERE
		 		REPLY_ID = #{rid}
	</select>
 </mapper>